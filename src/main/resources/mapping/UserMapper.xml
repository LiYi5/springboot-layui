<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiyouedu.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.xiyouedu.bean.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>

        <association property="role" javaType="role">
            <id column="role_id" property="roleId" jdbcType="INTEGER"/>
            <result column="rolename" property="rolename" jdbcType="VARCHAR"/>
        </association>

    </resultMap>



    <resultMap id="getUserRoles" type="com.xiyouedu.bean.UserR">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>

    <collection property="userRoles" ofType="com.xiyouedu.bean.UserRole">
        <result column="id_user" property="idUser" jdbcType="INTEGER"/>
        <result column="id_role" property="idRole" jdbcType="INTEGER"/>
    </collection>

    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    user_id, username, password
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xiyouedu.bean.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.xiyouedu.bean.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xiyouedu.bean.User">
    insert into user (user_id, username, password
      )
    values (#{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.xiyouedu.bean.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xiyouedu.bean.UserExample" resultType="java.lang.Integer">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set user_id = #{record.userId,jdbcType=INTEGER},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiyouedu.bean.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiyouedu.bean.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
    <!--&lt;!&ndash;查询用户所有信息&ndash;&gt;-->
    <!--<select id="selectAll" resultMap="BaseResultMap" >-->
    <!--select username,password,rolename-->
    <!--from user,user_role,role-->
    <!--where user.user_id=user_role.id_user-->
    <!--and user_role.id_role=role.role_id-->
    <!--</select>-->
    <select id="selectAll" resultType="com.xiyouedu.bean.UserRoleVo">
    SELECT  * FROM  USER
--     SELECT user_id,username,password
--     FROM (user  LEFT JOIN user_role
--     ON user.user_id=user_role.id_user )
--     LEFT JOIN role  ON role.role_id=user_role.id_role
  </select>


    <select id="findByUsername" parameterType="java.lang.String" resultType="com.xiyouedu.bean.User">
    SELECT  * FROM  USER  WHERE username=#{username}
  </select>

    <!--添加用户-->
    <insert id="insertUser" parameterType="com.xiyouedu.bean.User">
    insert into user (username, password
    )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
    )
  </insert>
    <select id="findByusernameLike" parameterType="java.lang.String" resultType="com.xiyouedu.bean.UserRoleVo">
    SELECT *
    FROM  USER
    WHERE username LIKE  '%${username}%';
</select>
    <!--根据用户id查询用户信息及角色id-->
    <select id="getUserAndRoles" parameterType="java.lang.Integer" resultMap="getUserRoles">
    select user.user_id,user.username,user.password,
    user_role.id_user,user_role.id_role
    from user LEFT  JOIN user_role ON
    user.user_id=user_role.id_user
    WHERE user.user_id=#{userid}
    </select>

    <select id="findPowerByUsername" parameterType="java.lang.String" resultType="com.xiyouedu.bean.Power">
  select *
  from role,role_power,power
  where role.role_id=role_power.id_role
  and role_power.id_power=power.power_id
  and rolename in
  (select rolename from user,user_role,role
  where user.username=#{username}
  and user.user_id=user_role.id_user
  and user_role.id_role=role.role_id)
    </select>

</mapper>