<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiyouedu.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.xiyouedu.bean.Role">
        <id column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="rolename" property="rolename" jdbcType="VARCHAR"/>

        <collection property="power" javaType="java.util.List" ofType="com.xiyouedu.bean.Power">
            <id column="powerId" property="powerId" jdbcType="INTEGER"/>
            <result column="powername" property="powername" jdbcType="VARCHAR"/>
            <result column="powerurl" property="powerurl" jdbcType="VARCHAR"/>

        </collection>
    </resultMap>

    <resultMap id="getRolePowers" type="com.xiyouedu.bean.RoleP">
    <id column="role_id" property="roleId" jdbcType="INTEGER"/>
    <result column="rolename" property="rolename" jdbcType="VARCHAR"/>

        <collection property="rolePowers" ofType="com.xiyouedu.bean.RolePower">
            <result column="id_role" property="idRole" jdbcType="INTEGER"/>
            <result column="id_power" property="idPower" jdbcType="INTEGER"/>
        </collection>

    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        role_id, rolename
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xiyouedu.bean.RoleExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.xiyouedu.bean.RoleExample">
        delete from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xiyouedu.bean.Role">
        insert into role (role_id, rolename)
        values (#{roleId,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.xiyouedu.bean.Role">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="rolename != null">
                rolename,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="rolename != null">
                #{rolename,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xiyouedu.bean.RoleExample" resultType="java.lang.Integer">
        select count(*) from role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update role
        <set>
            <if test="record.roleId != null">
                role_id = #{record.roleId,jdbcType=INTEGER},
            </if>
            <if test="record.rolename != null">
                rolename = #{record.rolename,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update role
        set role_id = #{record.roleId,jdbcType=INTEGER},
        rolename = #{record.rolename,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiyouedu.bean.Role">
        update role
        <set>
            <if test="rolename != null">
                rolename = #{rolename,jdbcType=VARCHAR},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiyouedu.bean.Role">
    update role
    set rolename = #{rolename,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
    <!--根据角色查询权限-->
    <select id="findByRoleid" parameterType="java.lang.String" resultType="com.xiyouedu.bean.Power">
select * from role,role_power,power
where role.role_id=role_power.id_role
and role_power.id_power=power.power_id
and rolename=#{rolename}
  </select>
    <!--根据用户姓名查询角色-->
    <select id="getRoleByUsername" parameterType="java.lang.String" resultType="com.xiyouedu.bean.Role">
        select rolename from role,user_role,user where user_role.id_role=role.role_id
  and user_role.id_user=user.user_id
  and user.username=#{username}
    </select>
    <!--根据用户姓名查询角色-->
    <select id="getRnameByUname" parameterType="java.lang.String" resultType="java.lang.String">
        select rolename from role,user_role,user where user_role.id_role=role.role_id
        and user_role.id_user=user.user_id
        and user.username=#{username}
    </select>

    <!--查询所有角色-->
    <select id="selectAll" resultType="com.xiyouedu.bean.Role">
        select * from Role
    </select>
    <select id="findAll" resultType="com.xiyouedu.bean.RolePermissionVo">
        SELECT  * FROM  Role
    </select>
    <select id="findByRolenameLike" parameterType="java.lang.String" resultType="com.xiyouedu.bean.RolePermissionVo">
     select * from role where rolename like '%${rolename}%'
    </select>

    <select id="findByRname" parameterType="java.lang.String" resultType="com.xiyouedu.bean.Role">
select * from role where role.rolename=#{rolename}
</select>
    <insert id="insertto" parameterType="java.lang.String" >
        insert into role (rolename) values(#{rolename})
    </insert>

    <select id="getRoleAndPowers" parameterType="java.lang.Integer" resultMap="getRolePowers">
    select role.role_id,role.rolename,
    role_power.id_role,role_power.id_power
    from role left join role_power
    on role.role_id=role_power.id_role
    where role.role_id=#{roleid}
    </select>


</mapper>